<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0057)file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!-- Generated by javadoc (version 1.7.0_45) on Tue Apr 29 23:21:13 EDT 2014 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>Stack</title>
<meta name="date" content="2014-04-29">
<link rel="stylesheet" type="text/css" href="./Stack_files/stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Stack";
    }
//-->
</script>
<noscript>
&lt;div&gt;JavaScript is disabled on your browser.&lt;/div&gt;
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class Stack" class="title">Class Stack</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>Deck</li>
<li>
<ul class="inheritance">
<li>Stack</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>DeckInterface, StackInterface</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">Stack</span>
extends Deck
implements StackInterface</pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#stackPlayer1">stackPlayer1</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt;</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#stackPlayer2">stackPlayer2</a></strong></code>&nbsp;</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#Stack()">Stack</a></strong>()</code>
<div class="block">constructor will take in a deck, split the deck in two and assign each half 
      of the deck to each players array</div>
</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#addCardPlayer1(Card)">addCardPlayer1</a></strong>(Card&nbsp;c)</code>
<div class="block">addCardPlayer1 will add a card object to a player 1's stack</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#addCardPlayer2(Card)">addCardPlayer2</a></strong>(Card&nbsp;c)</code>
<div class="block">addCardPlayer2 will add a card object to a player 2's stack</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#cardsRemainingPlayer1()">cardsRemainingPlayer1</a></strong>()</code>
<div class="block">cardsRemainingPlayer1 will return the number of cards in the players stack</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#cardsRemainingPlayer2()">cardsRemainingPlayer2</a></strong>()</code>
<div class="block">cardsRemainingPlayer2 will return the number of cards in the players stack</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#dealCardPlayer1()">dealCardPlayer1</a></strong>()</code>
<div class="block">dealCardPlayer1 will return a card from player 1's stack</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>Card</code></td>
<td class="colLast"><code><strong><a href="file:///C:/Users/Emily/.grasp_settings/doc_tmp/Stack.html#dealCardPlayer2()">dealCardPlayer2</a></strong>()</code>
<div class="block">dealCardPlayer2 will return a card from player 2's stack</div>
</td>
</tr>
</tbody></table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_Deck">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;Deck</h3>
<code>cardsRemaining, dealCard, freshDeck, isEmpty, shuffle</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="stackPlayer1">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stackPlayer1</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; stackPlayer1</pre>
</li>
</ul>
<a name="stackPlayer2">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>stackPlayer2</h4>
<pre>private&nbsp;<a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html?is-external=true" title="class or interface in java.util">ArrayList</a>&lt;Card&gt; stackPlayer2</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Stack()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Stack</h4>
<pre>public&nbsp;Stack()</pre>
<div class="block">constructor will take in a deck, split the deck in two and assign each half 
      of the deck to each players array</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="dealCardPlayer1()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dealCardPlayer1</h4>
<pre>public&nbsp;Card&nbsp;dealCardPlayer1()</pre>
<div class="block">dealCardPlayer1 will return a card from player 1's stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>dealCardPlayer1</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>a card objects</dd></dl>
</li>
</ul>
<a name="dealCardPlayer2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dealCardPlayer2</h4>
<pre>public&nbsp;Card&nbsp;dealCardPlayer2()</pre>
<div class="block">dealCardPlayer2 will return a card from player 2's stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>dealCardPlayer2</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>a card objects</dd></dl>
</li>
</ul>
<a name="cardsRemainingPlayer1()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cardsRemainingPlayer1</h4>
<pre>public&nbsp;int&nbsp;cardsRemainingPlayer1()</pre>
<div class="block">cardsRemainingPlayer1 will return the number of cards in the players stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>cardsRemainingPlayer1</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>an int of the number of cards</dd></dl>
</li>
</ul>
<a name="cardsRemainingPlayer2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cardsRemainingPlayer2</h4>
<pre>public&nbsp;int&nbsp;cardsRemainingPlayer2()</pre>
<div class="block">cardsRemainingPlayer2 will return the number of cards in the players stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>cardsRemainingPlayer2</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>an int of the number of cards</dd></dl>
</li>
</ul>
<a name="addCardPlayer1(Card)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addCardPlayer1</h4>
<pre>public&nbsp;void&nbsp;addCardPlayer1(Card&nbsp;c)</pre>
<div class="block">addCardPlayer1 will add a card object to a player 1's stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>addCardPlayer1</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>c</code> - a card object to be added</dd></dl>
</li>
</ul>
<a name="addCardPlayer2(Card)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>addCardPlayer2</h4>
<pre>public&nbsp;void&nbsp;addCardPlayer2(Card&nbsp;c)</pre>
<div class="block">addCardPlayer2 will add a card object to a player 2's stack</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>addCardPlayer2</code>&nbsp;in interface&nbsp;<code>StackInterface</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>c</code> - a card object to be added</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->


</body></html>